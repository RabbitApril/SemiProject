<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="reviewboardMapper">
  <resultMap type="ReviewBoardReadDto" id="ReviewBoardReadDtoResultMap">
  	<result column="REVIEW_ID" property="reviewId" />
  	<result column="BOARD_FILE_ID" property="boardFileId" />
  	<result column="ORIGINAL_FILENAME" property="originalFilename" />
  	<result column="SAVED_FILE_PATH_NAME" property="SavedFilePathName" />
  </resultMap>
  
  <select id="selectFileList" parameterType="int" resultMap="ReviewBoardReadDtoResultMap">
  	SELECT REVIEW_ID, BOARD_FILE_ID, ORIGINAL_FILENAME, SAVED_FILE_PATH_NAME
  	FROM REVIEWBOARD_FILE WHERE BOARD_ID=#{reviewId}
  </select>
  
  <select id="selectReviewBoardReplyList" parameterType="int" resultType="ReviewBoardReplyListDto">
  	SELECT REVIEW_ID, BOARD_REPLY_ID, MEM_ID, BOARD_REPLY_CONTENT, BOARD_REPLY_LOG_IP,
  			BOARD_REPLY_LEVEL, BOARD_REPLY_REF, BOARD_REPLY_STEP
  	FROM BOARD_REPLY WHERE BOARD_ID=#{reviewId} ORDER BY BOARD_REPLY_REF DESC, BOARD_REPLY_STEP
  </select>
  
  <select id="selectTotalCount" resultType="int">
  	SELECT COUNT(*) FROM REVIEWBOARD
  </select>
  
  <select id="selectPageList" resultType="ReviewBoardListDto" parameterType="map">
  	SELECT REVIEW_ID, REVIEW_TITLE, TO_CHAR(REVIEW_TIME,'yyyy-mm-dd') REVIEW_TIME, MEM_ID, REVIEW_COUNT
  	FROM REVIEWBOARD ORDER BY REVIEW_ID DESC
  </select>
  
  <select id="selectPageListRowBounds" resultType="ReviewBoardListDto">
  	SELECT REVIEW_ID, REVIEW_TITLE, TO_CHAR(REVIEW_TIME,'yyyy-mm-dd'), MEM_ID, REVIEW_COUNT
  	FROM (SELECT T1.*, ROWNUM RN
  			FROM (SELECT REVIEW_ID, REVIEW_TITLE, WRITE_TIME, MEM_ID, REVIEW_COUNT FROM REVIEWBOARD ORDER BY REVIEW_ID DESC) T1)
  	WHERE RN BETWEEN #{startRownum} AND #{endRownum}
  </select>
  
  <select id="selectAllList" resultType="ReviewBoardListDto">
  	SELECT REVIEW_ID, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_TIME, REVIEW_COUNT, REVIEW_GOOD, MEM_ID
  	FROM REVIEWBOARD
  </select>
  
  <select id="selectOne" resultType="ReviewBoardReadDto" parameterType="int">
  	SELECT REVIEW_ID, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_TIME, REVIEW_COUNT, REVIEW_GOOD, MEM_ID
  	FROM REVIEWBOARD WHERE REVIEW_ID=#{reviewId}
  </select>
  
  <select id="getSequenceNum" resultType="int">
  	SELECT SEQ_REVIEW_ID.NEXTVAL SEQ FROM DUAL
  </select>
  
  <insert id="insert" parameterType="ReviewBoardInsertDto">
	INSERT ALL
	INTO REVIEWBOARD (REVIEW_ID, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_TIME, MEM_ID, REVIEW_COUNT, REVIEW_GOOD)
	VALUES (SEQ_REVIEW_ID.NEXTVAL, #{reviewTitle}, #{reviewContent}, default, #{memId}, default, default)
	<if test = "fileList != null">
		<foreach collection="fileList" item="filedto" index="idx" separator=" ">
			INTO REVIEWBOARD_FILE (REVIEW_ID, BOARD_FILE_ID, ORIGINAL_FILENAME, SAVED_FILE_PATH_NAME)
			VALUES (SEQ_REVIEW_ID.NEXTVAL, #{idx}, #{filedto.filePath}, #{filedto.orginalFileName})
		</foreach>
	</if>
	SELECT * FROM DUAL
  </insert>
  
  <insert id="insertReply" parameterType="ReviewBoardReplyWriteDto">
  	INSERT INTO REVIEW_REPLY VALUES (SELECT NVL(MAX(BOARD_REPLY_ID),0)+1 FROM REVIEW_REPLY),
  	#{reviewId}, #{memId}, #{boardReplyContent}, DEFAULT, NULL, DEFAULT,
  	(SELECT NVL(MAX(BOARD_REPLY_ID),0)+1 FROM REVIEW_REPLY), DEFAULT)
  </insert>
 
  
  <update id="update" parameterType="ReviewBoardDto">
  	UPDATE REVIEWBOARD SET REVIEW_TITLE=#{reviewTitle}, REVIEW_CONTENT=#{reviewContent}, WRITE_TIME=default WHERE MEM_ID=#{reviewId}
  </update>
  
  <update id="updateReadCount" parameterType="int">
  	UPDATE REVIEWBOARD SET REVIEW_COUNT=REVIEW_COUNT + 1 WHERE REVIEW_ID=#{reviewId}
  </update>
  
  <update id="updateReplyStep" parameterType="int">
  	UPDATE REVIEW_REPLY SET BOARD_REPLY_STEP = BOARD_REPLY_STEP+1   
		WHERE
		BOARD_REPLY_REF = (SELECT BOARD_REPLY_REF FROM BOARD_REPLY WHERE BOARD_REPLY_ID = #{boardReplyId})
		AND 
		BOARD_REPLY_STEP > (SELECT BOARD_REPLY_STEP FROM BOARD_REPLY WHERE BOARD_REPLY_ID = #{boardReplyId})
  </update>
  
  <delete id="delete" parameterType="int">
  	DELETE FROM REVIEWBOARD WHERE REVIEW_ID=#{reviewId}
  </delete>
</mapper>
